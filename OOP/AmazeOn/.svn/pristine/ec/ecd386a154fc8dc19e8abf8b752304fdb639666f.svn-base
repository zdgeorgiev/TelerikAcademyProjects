using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace AmazeOn
{
    public class Store
    {
        //Fields
        private static Store instance;
        private List<Item> itemsInStore;

        //Properties
        public Store Instance
        {
            get
            {
                return instance;
            }
            private set
            {
                if (instance == null)
                {
                    instance = new Store();
                    instance.itemsInStore = new List<Item>();
                }
            }
        }

        public List<Item> ItemsInStore
        {
            get
            {
                return itemsInStore;
            }
            private set
            {
                this.itemsInStore = value;
            }
        }

        //Methods
        public void FillUp()
        {
            StreamReader reader = new StreamReader("../../computers.txt");
            double price;
            Manufacturer manufacturer;
            OperationSystem operationSystem;
            Promotion promotion;
            int quantity;
            string model;
            string picture;
            string processor;
            string graphicCard;
            string[] utility;
            Computer computer;
            Laptop laptop;
            string display;
            string battery;
            GSM GSM;

            using (reader)
            {
                string result = reader.ReadLine();
                while (result != null)
                {
                    model = result;
                    price = double.Parse(reader.ReadLine());
                    quantity = int.Parse(reader.ReadLine());
                    picture = reader.ReadLine();
                    processor = reader.ReadLine();
                    graphicCard = reader.ReadLine();
                    manufacturer = (Manufacturer) Enum.Parse(typeof(Manufacturer), reader.ReadLine());
                    operationSystem = (OperationSystem) Enum.Parse(typeof(OperationSystem), reader.ReadLine());
                    result = reader.ReadLine();
                    utility = result.Split('*');
                    promotion = new Promotion(DateTime.Parse(utility[0]), DateTime.Parse(utility[1]), double.Parse(utility[2]));
                    computer = new Computer(price, manufacturer, operationSystem, promotion, quantity, model, picture, processor, graphicCard);
                    this.ItemsInStore.Add(computer);

                    result = reader.ReadLine();
                }
            }

            reader = new StreamReader("../../laptops.txt");
            using (reader)
            {
                string result = reader.ReadLine();
                while (result != null)
                {
                    model = result;
                    price = double.Parse(reader.ReadLine());
                    quantity = int.Parse(reader.ReadLine());
                    picture = reader.ReadLine();
                    processor = reader.ReadLine();
                    graphicCard = reader.ReadLine();
                    manufacturer = (Manufacturer)Enum.Parse(typeof(Manufacturer), reader.ReadLine());
                    operationSystem = (OperationSystem)Enum.Parse(typeof(OperationSystem), reader.ReadLine());
                    display = reader.ReadLine();
                    battery = reader.ReadLine();
                    result = reader.ReadLine();
                    utility = result.Split('*');
                    promotion = new Promotion(DateTime.Parse(utility[0]), DateTime.Parse(utility[1]), double.Parse(utility[2]));
                    laptop = new Laptop(price, manufacturer, operationSystem, promotion, quantity, model, picture, processor,
                        graphicCard, display, battery);
                    this.ItemsInStore.Add(laptop);

                    result = reader.ReadLine();
                }
            }

            reader = new StreamReader("../../GSMs.txt");
            using (reader)
            {
                string result = reader.ReadLine();
                while (result != null)
                {
                    model = result;
                    price = double.Parse(reader.ReadLine());
                    quantity = int.Parse(reader.ReadLine());
                    picture = reader.ReadLine();
                    processor = reader.ReadLine();
                    manufacturer = (Manufacturer)Enum.Parse(typeof(Manufacturer), reader.ReadLine());
                    operationSystem = (OperationSystem)Enum.Parse(typeof(OperationSystem), reader.ReadLine());
                    display = reader.ReadLine();
                    battery = reader.ReadLine();
                    result = reader.ReadLine();
                    utility = result.Split('*');
                    promotion = new Promotion(DateTime.Parse(utility[0]), DateTime.Parse(utility[1]), double.Parse(utility[2]));
                    GSM = new GSM(price, manufacturer, operationSystem, promotion, quantity, model, picture, processor, display, battery);
                    this.ItemsInStore.Add(GSM);

                    result = reader.ReadLine();
                }
            }
        }

        private void LogIt()
        {
            foreach (var item in this.ItemsInStore)
            {
                item.AddToLog();
            }
        }

        public static Store InitializeCart()
        {
            if (instance == null)
            {
                instance = new Store();
                instance.itemsInStore = new List<Item>();
            }

            return instance;
        }

        void AddToCart(Item item)
        {
            this.itemsInStore.Add(item);
        }

        //Constructors
        private Store()
        {
        }
    }
}
