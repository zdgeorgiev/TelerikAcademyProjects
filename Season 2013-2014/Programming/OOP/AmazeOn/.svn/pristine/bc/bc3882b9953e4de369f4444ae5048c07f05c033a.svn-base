using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace AmazeOn
{
    public abstract class User
    {
        //Fields.

        //Properties.
        public string UserName { get; set; }
        public string Password { get; set; }
        public bool PermissionToBuy { get; set; }

        public void Register()
        {
            if (this.UserName.Length <= 0 || this.Password.Length <= 0)
            {
                throw new ArgumentException("Invalid username or password.");
            }

            if (this.UserName.Length <= 0 || this.Password.Length <= 0)
            {
                throw new ArgumentException("Invalid username or password.");
            }

            bool canRegister = true;

            using (StreamReader reader = new StreamReader("../../Users.txt"))
            {
                string line = reader.ReadLine();
                //Skip the first line
                line = reader.ReadLine();

                while (line != null)
                {
                    //Pesho 123456
                    string[] rawElements = line.Split();
                    string currentUserName = rawElements[0];

                    if (this.UserName == currentUserName)
                    {
                        canRegister = false;
                        break;
                    }

                    line = reader.ReadLine();
                }
            }

            if (canRegister)
            {
                using (StreamWriter writer = new StreamWriter("../../Users.txt", true))
                {
                    //Register as new user.
                    writer.WriteLine("{0} {1}", this.UserName, this.Password);
                }
            }
            else
            {
                throw new ArgumentException("User name already exist.");
            }
        }

        public void Login()
        {
            bool isFound = false;

            using (StreamReader reader = new StreamReader("../../Users.txt"))
            {
                string line = reader.ReadLine();
                //Skip the first line
                line = reader.ReadLine();

                while (line != null)
                {
                    //Pesho 123456
                    string[] rawElements = line.Split();
                    string currentUserName = rawElements[0];
                    string currentPassword = rawElements[1];

                    if (this.UserName == currentUserName &&
                        this.Password == currentPassword)
                    {
                        isFound = true;
                        break;
                    }

                    line = reader.ReadLine();
                }
            }

            //if (isFound)
            //{
            //    this.permissionToBuy = true;
            //}
            //else
            //{
            //    throw new ArgumentException("Invalid username/password");
            //}
        }

        //Methods.

        //Constructors.
        public User(string userName, string password, bool permissionToBuy)
        {
            this.UserName = userName;
            this.Password = password;
            this.PermissionToBuy = permissionToBuy;
        }
        public User() { }
    }
}